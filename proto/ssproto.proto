syntax = "proto3";

package smproto;

enum SSCmd {
    INVALID_CMD = 0;
    //agent && nameserver 1000 ~ 1999
    REQ_REGISTER_APP        = 1000;
    RSP_REGISTER_APP        = 1001;
    REQ_REGISTER_SERVICE    = 1002;
    RSP_REGISTER_SERVICE    = 1003;
    NOTIFY_SERVICE_ONLINE   = 1004;
    REQ_UNREGISTER_SERVICE  = 1005;
    NOTIFY_NAMESERVER_HEARTBEAT  = 1006;
    NOTIFY_NAMESERVER_SYNCATTR   = 1007;
    NOTIFY_SERVICE_SYNCATTR      = 1008;
    NOTIFY_NAMESERVER_ELECTION   = 1009;
    NOTIFY_SERVICE_ELECTION_RESULT = 1010;
    NOTIFY_SERVICE_KICK_OFF      = 1011;
    NOTIFY_NAMESERVER_AGENT_INFO = 1012;
    NOTIFY_NAMESERVER_REGISTER_ROUTER = 1013;
    //有状态服务扩缩容,2段提交流程
    REQ_AGENT_ROUTER_UPDATE = 1014;
    RSP_NAMESERVER_ROUTER_UPDATE = 1015;


    //agent && agent 2000 ~ 2999
    NOTIFY_SERVICE_MESSAGE  = 2000;
    REQ_PING_SERVICE        = 2001;
    RSP_PING_SERVICE        = 2002;
}

enum SSError {
    OK = 0;
    ERR_APP_NOT_REGISTER = -1000;
    ERR_SERVICE_REGISTER_AGAIN = -1001;
    ERR_APP_SESSION_LOST = -1002;
    ERR_ROUTER_PREPARE_ERR = -1003;
    ERR_ROUTER_PREPARE_TIMEOUT = -1004;
    ERR_SERVICE_REGISTER_LINEUP = -1005;
}

//agent与nameserver建立连接后同步agent信息
message NotifyNameServerAgentInfo {
    string ServerAddr = 1; //mesh server address: ip:port
    string AppID      = 2; //应用ID
}

//注册App相关
message ReqRegisterApp {
    string ServerAddr = 1; //mesh server address: ip:port
    string AppID      = 2; //应用ID
}

message RspRegisterApp {
    repeated ServiceInfo Leaders = 1; //同步当前选举全部leader
    int32 Result = 2; //0 成功, 其他失败
}

//注册/注销服务相关
message ServiceInfo {
    string ServiceName = 1; //app_id.env_name.service_name
    uint64 ServiceId = 2;
    uint64 AddrHandle = 3;
}

message ServiceOptions {
    uint64 ConsistentHashKey = 1;
}

message ReqRegisterService {
    ServiceInfo service_info = 1;
    ServiceOptions options = 2;
}

message RspRegisterService {
    uint64 AddrHandle = 1;
    int32 Result = 2; //0 成功, 其他失败
}

message ReqUnRegisterService {
    uint64 AddrHandle = 1;
}

//通知服务上下线相关
message NotifyServiceOnline {
    string ServerAddr = 1; //mesh server address: ip:port
    ServiceInfo service_info = 2;
    ServiceOptions options = 3;
    bool is_online = 4;
}

//跨进程服务消息通知
message NotifyServiceMessage {
    ServiceInfo src_service = 1;
    uint64      dst_handle = 2;
    bytes       data = 3;
}

//Agent服务与NameServer心跳
message NotifyNameServerHeartBeat {
    uint64 SrcHandle = 1;
}

//通过NameServer同步Service属性变更
message NotifyNameServerSyncAttr {
    uint64      SrcHandle = 1;
    bytes       data = 2;
}

//NameServer同步Agent Service属性变更
message NotifyServiceSyncAttr {
    ServiceInfo service_info = 1;
    bytes       data = 2;
}

//通知NameServer竞选leader
message NotifyNameServerElection {
    uint64      SrcHandle = 1;
    int32       Event = 2; //KRunForElectionLeader / KGiveUpElectionLeader
}

//NameServer通知Service选举结果
message NotifyServiceElectionResult {
    ServiceInfo Candidate = 1;
    int32       Event = 2;   //KRunForElectionLeader / KGiveUpElectionLeader
    int32       Result  = 3; //KElectionResultOK / KElectionResultRunForFail / KElectionResultAlreadyLeader ...
}

//NameServer强踢某Service下线
message NotifyServiceKickOff {
    uint64 AddrHandle = 1;
}

//NameServer通知Agent 有状态服务实例扩容
message ReqAgentRouterUpdate {
    int32  Cmd = 1; //一阶段Prepare. 二阶段PrepareAbort, Commit由NotifyServiceOnline通知
    string ServiceName = 2;
}

//Agent回复NameServer 有状态服务实例扩容
message RspNameServerRouterUpdate {
    int32  Result = 1; //一阶段PrepareOK
    string ServiceName = 2;
}

//Agent通知NameServer注册路由
message NotifyNameServerRegisterRouter {
    string ServiceName = 1;
}

//Agent服务间Ping包
message ReqServicePing {
    uint64 Seq = 1;
    uint64 DstHandle = 2;
    string SrcServerAddr = 3;
}

message RspServicePing {
    uint64 Seq = 1;
    uint64 SrcHandle = 2;
}

message SSMsg {
  SSCmd cmd = 1;
  oneof Msg
  {
      ReqRegisterApp     register_app_req                  = 100;
      RspRegisterApp     register_app_rsp                  = 101;
      ReqRegisterService register_service_req              = 102;
      RspRegisterService register_service_rsp              = 103;
      NotifyServiceOnline notify_service_online            = 104;
      ReqUnRegisterService unregister_service_req          = 105;
      NotifyNameServerHeartBeat notify_nameserver_hb       = 106;
      NotifyNameServerSyncAttr  notify_nameserver_attr     = 107;
      NotifyServiceSyncAttr  notify_service_attr           = 108;
      NotifyNameServerElection  notify_nameserver_election = 109;
      NotifyServiceElectionResult   notify_service_election_result = 110;
      NotifyServiceKickOff   notify_service_kickoff        = 111;
      NotifyNameServerAgentInfo notify_nameserver_agent_info = 112;
      NotifyNameServerRegisterRouter notify_nameserver_register_router = 113;
      ReqAgentRouterUpdate   agent_router_update_req         = 114;
      RspNameServerRouterUpdate nameserver_router_update_rsp = 115;

      NotifyServiceMessage   notify_service_message        = 200;
      ReqServicePing     service_ping_req                  = 201;
      RspServicePing     service_ping_rsp                  = 202;
  }
}
